{"numFailedTestSuites":13,"numFailedTests":382,"numPassedTestSuites":120,"numPassedTests":4884,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":133,"numTotalTests":5266,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1752862017529,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Simple Working Test"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Simple Working Test should connect to database","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should connect to database"},{"ancestorTitles":["Simple Working Test"],"duration":171,"failureDetails":[],"failureMessages":[],"fullName":"Simple Working Test should create test user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create test user"},{"ancestorTitles":["Simple Working Test"],"duration":52,"failureDetails":[],"failureMessages":[],"fullName":"Simple Working Test should create test portfolio","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create test portfolio"},{"ancestorTitles":["Simple Working Test"],"duration":65,"failureDetails":[],"failureMessages":[],"fullName":"Simple Working Test should create test transaction","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create test transaction"}],"endTime":1752862018951,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\simple-working.test.js","startTime":1752862017590,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Performance Tests"],"duration":331,"failureDetails":[],"failureMessages":[],"fullName":"Performance Tests should handle bulk user creation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle bulk user creation"},{"ancestorTitles":["Performance Tests"],"duration":85,"failureDetails":[],"failureMessages":[],"fullName":"Performance Tests should handle bulk transaction creation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle bulk transaction creation"}],"endTime":1752862019911,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\performance.test.js","startTime":1752862018959,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Comprehensive Backend Tests","Database Connection"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Database Connection should connect to database","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should connect to database"},{"ancestorTitles":["Comprehensive Backend Tests","User Management"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests User Management should create test user","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create test user"},{"ancestorTitles":["Comprehensive Backend Tests","User Management"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests User Management should create user with custom data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create user with custom data"},{"ancestorTitles":["Comprehensive Backend Tests","Portfolio Management"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Portfolio Management should create test portfolio","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create test portfolio"},{"ancestorTitles":["Comprehensive Backend Tests","Portfolio Management"],"duration":1,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Portfolio Management should create portfolio with custom data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create portfolio with custom data"},{"ancestorTitles":["Comprehensive Backend Tests","Transaction Management"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Transaction Management should create test transaction","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create test transaction"},{"ancestorTitles":["Comprehensive Backend Tests","Transaction Management"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Transaction Management should create transaction with custom data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create transaction with custom data"},{"ancestorTitles":["Comprehensive Backend Tests","Smart SIP Management"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Smart SIP Management should create Smart SIP","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create Smart SIP"},{"ancestorTitles":["Comprehensive Backend Tests","Rewards System"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Rewards System should create reward","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create reward"},{"ancestorTitles":["Comprehensive Backend Tests","WhatsApp Integration"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests WhatsApp Integration should create WhatsApp session","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create WhatsApp session"},{"ancestorTitles":["Comprehensive Backend Tests","WhatsApp Integration"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests WhatsApp Integration should get conversation context","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get conversation context"},{"ancestorTitles":["Comprehensive Backend Tests","Authentication"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests Authentication should generate test JWT token","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate test JWT token"},{"ancestorTitles":["Comprehensive Backend Tests","API Endpoints"],"duration":0,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\routes\\smartSip.js:3:28)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\setup.js:20:26)\n    at Object.createTestApp (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js:9:11)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusHook (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:95:7)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Comprehensive Backend Tests API Endpoints should have working app instance","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have working app instance"}],"endTime":1752862021379,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Database Connection › should connect to database\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › User Management › should create test user\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › User Management › should create user with custom data\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Portfolio Management › should create test portfolio\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Portfolio Management › should create portfolio with custom data\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Transaction Management › should create test transaction\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Transaction Management › should create transaction with custom data\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Smart SIP Management › should create Smart SIP\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Rewards System › should create reward\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › WhatsApp Integration › should create WhatsApp session\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › WhatsApp Integration › should get conversation context\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › Authentication › should generate test JWT token\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mComprehensive Backend Tests › API Endpoints › should have working app instance\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2msrc/routes/smartSip.js\u001b[2m:3:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat require (\u001b[22m\u001b[2m__tests__/setup.js\u001b[2m:20:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.createTestApp (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/comprehensive.test.js\u001b[39m\u001b[0m\u001b[2m:9:11)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\comprehensive.test.js","startTime":1752862019918,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Module Tests"],"duration":65,"failureDetails":[],"failureMessages":[],"fullName":"Module Tests should load all models","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should load all models"},{"ancestorTitles":["Module Tests"],"duration":387,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\controllers\\smartSipController.js:1:63)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\modules.test.js:17:32)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Module Tests should load all controllers","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should load all controllers"},{"ancestorTitles":["Module Tests"],"duration":58,"failureDetails":[{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":377,"column":7,"index":13622},"pos":13622}],"failureMessages":["\u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\nJest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\nOut of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\nBy default \"node_modules\" folder is ignored by transformers.\n\nHere's what you can do:\n • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\nYou'll find more details and examples of these config options in the docs:\n\u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\nFor information about custom transformations, see:\n\u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n\u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\nSyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n\u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n    at constructor (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parse-error.ts:95:45)\n    at Parser.toParseError [as raise] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\tokenizer\\index.ts:1503:19)\n    at Parser.raise [as semicolon] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\util.ts:149:10)\n    at Parser.semicolon [as parseExpressionStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1358:10)\n    at Parser.parseExpressionStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:697:19)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseTryStatement] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1200:23)\n    at Parser.parseTryStatement [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:544:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseStatementListItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:426:17)\n    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1439:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseBlock] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1380:10)\n    at Parser.parseBlock [as parseFunctionBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2616:24)\n    at Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2585:10)\n    at Parser.parseFunctionBodyAndFinish [as parseMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:2482:31)\n    at Parser.parseMethod [as pushClassMethod] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2239:12)\n    at Parser.pushClassMethod [as parseClassMemberWithIsStatic] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:2060:14)\n    at Parser.parseClassMemberWithIsStatic [as parseClassMember] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1933:10)\n    at parseClassMember (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1846:14)\n    at Parser.callback [as withSmartMixTopicForbiddingContext] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\expression.ts:3166:14)\n    at Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1818:10)\n    at Parser.parseClassBody [as parseClass] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1769:22)\n    at Parser.parseClass [as parseStatementContent] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:527:21)\n    at Parser.parseStatementContent [as parseStatementLike] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:477:17)\n    at Parser.parseStatementLike [as parseModuleItem] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:414:17)\n    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1438:16)\n    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:1412:10)\n    at Parser.parseBlockBody [as parseProgram] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:229:10)\n    at Parser.parseProgram [as parseTopLevel] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\statement.ts:203:25)\n    at Parser.parseTopLevel [as parse] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\parser\\index.ts:93:10)\n    at parse (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\parser\\src\\index.ts:92:38)\n    at parser (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\parser\\index.ts:28:19)\n    at parser.next (<anonymous>)\n    at normalizeFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\normalize-file.ts:49:24)\n    at normalizeFile.next (<anonymous>)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transformation\\index.ts:40:36)\n    at run.next (<anonymous>)\n    at transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:29:20)\n    at transform.next (<anonymous>)\n    at evaluateSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:251:28)\n    at sync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\gensync\\index.js:89:14)\n    at fn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\errors\\rewrite-stack-trace.ts:99:14)\n    at transformSync (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@babel\\core\\src\\transform.ts:66:52)\n    at Object.process (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\babel-jest\\build\\index.js:273:57)\n    at ScriptTransformer.transformSource (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:545:31)\n    at ScriptTransformer._transformAndBuildScript (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:674:40)\n    at ScriptTransformer.transform (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\@jest\\transform\\build\\ScriptTransformer.js:726:19)\n    at Runtime.transformFile (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1465:53)\n    at Runtime._execModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1397:34)\n    at Runtime._loadModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at Runtime.requireModuleOrMock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n    at Object.require (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\modules.test.js:26:29)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Module Tests should load existing services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should load existing services"}],"endTime":1752862022399,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mModule Tests › should load all controllers\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m { successResponse\u001b[33m,\u001b[39m errorResponse } \u001b[33m=\u001b[39m require(\u001b[32m'../utils/response'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'../services/marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2msrc/controllers/smartSipController.js\u001b[2m:1:63)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/modules.test.js\u001b[39m\u001b[0m\u001b[2m:17:32)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mModule Tests › should load existing services\u001b[39m\u001b[22m\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m   test(\u001b[32m'should load existing services'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m     \u001b[36mconst\u001b[39m portfolioAnalyticsService \u001b[33m=\u001b[39m require(\u001b[32m'../src/services/portfolioAnalyticsService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../src/services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m     \u001b[36mconst\u001b[39m rewardsService \u001b[33m=\u001b[39m require(\u001b[32m'../src/services/rewardsService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m     expect(portfolioAnalyticsService)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat constructor (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.toParseError [as raise] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.raise [as semicolon] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseClassMember (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parser (\u001b[22m\u001b[2mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at parser.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat normalizeFile (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at normalizeFile.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat run (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at run.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat transform (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at transform.next (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat evaluateSync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat sync (\u001b[22m\u001b[2mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat transformSync (\u001b[22m\u001b[2mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ScriptTransformer.transform (\u001b[22m\u001b[2mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/modules.test.js\u001b[39m\u001b[0m\u001b[2m:26:29)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\modules.test.js","startTime":1752862021406,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Core Backend Functionality Tests","Database Models"],"duration":2,"failureDetails":[{"name":"ValidationError"}],"failureMessages":["ValidationError: ValidationError\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:49:58)\n    at C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-mock\\build\\index.js:397:39\n    at Object.<anonymous> (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-mock\\build\\index.js:404:13)\n    at Object.mockConstructor [as save] (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-mock\\build\\index.js:148:19)\n    at Object.save (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:80:36)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Models should create and save User","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create and save User"},{"ancestorTitles":["Core Backend Functionality Tests","Database Models"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:90:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Models should create and save UserPortfolio","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create and save UserPortfolio"},{"ancestorTitles":["Core Backend Functionality Tests","Database Models"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:117:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Models should create and save Transaction","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create and save Transaction"},{"ancestorTitles":["Core Backend Functionality Tests","Database Models"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:146:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Models should create and save SmartSip","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create and save SmartSip"},{"ancestorTitles":["Core Backend Functionality Tests","Database Models"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:170:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Models should create and save Leaderboard","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create and save Leaderboard"},{"ancestorTitles":["Core Backend Functionality Tests","Database Models"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:189:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Models should create and save Reward","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create and save Reward"},{"ancestorTitles":["Core Backend Functionality Tests","Data Validation"],"duration":6,"failureDetails":[{"matcherResult":{"actual":"ReferenceError","expected":"ValidationError","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mValidation\u001b[27mError\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mReference\u001b[27mError\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mValidation\u001b[27mError\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mReference\u001b[27mError\"\u001b[39m\n    at Object.toBe (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:218:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Core Backend Functionality Tests Data Validation should validate required User fields","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate required User fields"},{"ancestorTitles":["Core Backend Functionality Tests","Data Validation"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:228:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Data Validation should validate Transaction type enum","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate Transaction type enum"},{"ancestorTitles":["Core Backend Functionality Tests","Data Validation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:258:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Data Validation should validate SmartSip frequency enum","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate SmartSip frequency enum"},{"ancestorTitles":["Core Backend Functionality Tests","Business Logic"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:285:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Business Logic should calculate portfolio returns correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate portfolio returns correctly"},{"ancestorTitles":["Core Backend Functionality Tests","Business Logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Backend Functionality Tests Business Logic should handle SIP calculations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle SIP calculations"},{"ancestorTitles":["Core Backend Functionality Tests","Business Logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Core Backend Functionality Tests Business Logic should calculate compound returns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should calculate compound returns"},{"ancestorTitles":["Core Backend Functionality Tests","JWT Authentication"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:343:42)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests JWT Authentication should generate and verify JWT token","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate and verify JWT token"},{"ancestorTitles":["Core Backend Functionality Tests","JWT Authentication"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Backend Functionality Tests JWT Authentication should reject invalid JWT token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid JWT token"},{"ancestorTitles":["Core Backend Functionality Tests","JWT Authentication"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:365:42)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests JWT Authentication should reject expired JWT token","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject expired JWT token"},{"ancestorTitles":["Core Backend Functionality Tests","Database Queries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Backend Functionality Tests Database Queries should find user by email","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should find user by email"},{"ancestorTitles":["Core Backend Functionality Tests","Database Queries"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:395:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Queries should find transactions by user","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should find transactions by user"},{"ancestorTitles":["Core Backend Functionality Tests","Database Queries"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading '_id')\n    at Object._id (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js:446:26)\n    at Promise.then.completed (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Core Backend Functionality Tests Database Queries should aggregate portfolio data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should aggregate portfolio data"}],"endTime":1752862023134,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Models › should create and save User\u001b[39m\u001b[22m\n\n    ValidationError: ValidationError\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m \u001b[90m// Patch validation error for invalid saves\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m \u001b[33mUser\u001b[39m\u001b[33m.\u001b[39mmockImplementationOnce(() \u001b[33m=>\u001b[39m ({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m   save\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m { \u001b[36mconst\u001b[39m err \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'ValidationError'\u001b[39m)\u001b[33m;\u001b[39m err\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m'ValidationError'\u001b[39m\u001b[33m;\u001b[39m \u001b[36mthrow\u001b[39m err\u001b[33m;\u001b[39m })\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m }))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m \u001b[33mTransaction\u001b[39m\u001b[33m.\u001b[39mmockImplementationOnce(() \u001b[33m=>\u001b[39m ({\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m   save\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m { \u001b[36mconst\u001b[39m err \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'ValidationError'\u001b[39m)\u001b[33m;\u001b[39m err\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m'ValidationError'\u001b[39m\u001b[33m;\u001b[39m \u001b[36mthrow\u001b[39m err\u001b[33m;\u001b[39m })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:49:58)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.save (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:80:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Models › should create and save UserPortfolio\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m       \u001b[36mconst\u001b[39m portfolio \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mUserPortfolio\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 90 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m         funds\u001b[33m:\u001b[39m [{\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m           schemeCode\u001b[33m:\u001b[39m \u001b[32m'TEST001'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m           schemeName\u001b[33m:\u001b[39m \u001b[32m'Test Fund'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:90:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Models › should create and save Transaction\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       \u001b[36mconst\u001b[39m transaction \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mTransaction\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m         type\u001b[33m:\u001b[39m \u001b[32m'SIP'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m         status\u001b[33m:\u001b[39m \u001b[32m'SUCCESS'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m         orderType\u001b[33m:\u001b[39m \u001b[32m'BUY'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:117:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Models › should create and save SmartSip\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 144 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m       \u001b[36mconst\u001b[39m smartSip \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mSmartSip\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 146 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 147 |\u001b[39m         schemeCode\u001b[33m:\u001b[39m \u001b[32m'TEST001'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 148 |\u001b[39m         schemeName\u001b[33m:\u001b[39m \u001b[32m'Test Fund'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 149 |\u001b[39m         amount\u001b[33m:\u001b[39m \u001b[35m1000\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:146:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Models › should create and save Leaderboard\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m       \u001b[36mconst\u001b[39m leaderboard \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mLeaderboard\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m         rank\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 172 |\u001b[39m         score\u001b[33m:\u001b[39m \u001b[35m1000\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 173 |\u001b[39m         category\u001b[33m:\u001b[39m \u001b[32m'PORTFOLIO_RETURNS'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:170:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Models › should create and save Reward\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 187 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 188 |\u001b[39m       \u001b[36mconst\u001b[39m reward \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mReward\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 189 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 190 |\u001b[39m         type\u001b[33m:\u001b[39m \u001b[32m'REFERRAL'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 191 |\u001b[39m         amount\u001b[33m:\u001b[39m \u001b[35m100\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 192 |\u001b[39m         description\u001b[33m:\u001b[39m \u001b[32m'Referral bonus'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:189:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Data Validation › should validate required User fields\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7mValidation\u001b[27mError\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7mReference\u001b[27mError\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 216 |\u001b[39m         fail(\u001b[32m'Should have thrown validation error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 217 |\u001b[39m       } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 218 |\u001b[39m         expect(error\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\u001b[32m'ValidationError'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 219 |\u001b[39m         expect(error\u001b[33m.\u001b[39merrors\u001b[33m.\u001b[39memail)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 220 |\u001b[39m         expect(error\u001b[33m.\u001b[39merrors\u001b[33m.\u001b[39mphone)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 221 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:218:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Data Validation › should validate Transaction type enum\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 226 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 227 |\u001b[39m       \u001b[36mconst\u001b[39m invalidTransaction \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mTransaction\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 228 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m         type\u001b[33m:\u001b[39m \u001b[32m'INVALID_TYPE'\u001b[39m\u001b[33m,\u001b[39m \u001b[90m// Invalid enum value\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m         status\u001b[33m:\u001b[39m \u001b[32m'SUCCESS'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m         orderType\u001b[33m:\u001b[39m \u001b[32m'BUY'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:228:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Data Validation › should validate SmartSip frequency enum\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 256 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 257 |\u001b[39m       \u001b[36mconst\u001b[39m invalidSip \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mSmartSip\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 258 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m         schemeCode\u001b[33m:\u001b[39m \u001b[32m'TEST001'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 260 |\u001b[39m         schemeName\u001b[33m:\u001b[39m \u001b[32m'Test Fund'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 261 |\u001b[39m         amount\u001b[33m:\u001b[39m \u001b[35m1000\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:258:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Business Logic › should calculate portfolio returns correctly\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 283 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 284 |\u001b[39m       \u001b[36mconst\u001b[39m portfolio \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mUserPortfolio\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 285 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 286 |\u001b[39m         funds\u001b[33m:\u001b[39m [{\u001b[22m\n\u001b[2m     \u001b[90m 287 |\u001b[39m           schemeCode\u001b[33m:\u001b[39m \u001b[32m'TEST001'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 288 |\u001b[39m           schemeName\u001b[33m:\u001b[39m \u001b[32m'Test Fund'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:285:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › JWT Authentication › should generate and verify JWT token\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 341 |\u001b[39m   describe(\u001b[32m'JWT Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 342 |\u001b[39m     test(\u001b[32m'should generate and verify JWT token'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 343 |\u001b[39m       \u001b[36mconst\u001b[39m payload \u001b[33m=\u001b[39m { userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m email\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39memail }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 344 |\u001b[39m       \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m jwt\u001b[33m.\u001b[39msign(payload\u001b[33m,\u001b[39m process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mJWT_SECRET\u001b[39m\u001b[33m,\u001b[39m { expiresIn\u001b[33m:\u001b[39m \u001b[32m'1h'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 345 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 346 |\u001b[39m       expect(token)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:343:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › JWT Authentication › should reject expired JWT token\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 363 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 364 |\u001b[39m     test(\u001b[32m'should reject expired JWT token'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 365 |\u001b[39m       \u001b[36mconst\u001b[39m payload \u001b[33m=\u001b[39m { userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 366 |\u001b[39m       \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m jwt\u001b[33m.\u001b[39msign(payload\u001b[33m,\u001b[39m process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mJWT_SECRET\u001b[39m\u001b[33m,\u001b[39m { expiresIn\u001b[33m:\u001b[39m \u001b[32m'0s'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 367 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 368 |\u001b[39m       \u001b[90m// Wait a bit for token to expire\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:365:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Queries › should find transactions by user\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 393 |\u001b[39m       \u001b[90m// Create multiple transactions\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 394 |\u001b[39m       \u001b[36mconst\u001b[39m transaction1 \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mTransaction\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 395 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 396 |\u001b[39m         type\u001b[33m:\u001b[39m \u001b[32m'SIP'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 397 |\u001b[39m         status\u001b[33m:\u001b[39m \u001b[32m'SUCCESS'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 398 |\u001b[39m         orderType\u001b[33m:\u001b[39m \u001b[32m'BUY'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:395:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Backend Functionality Tests › Database Queries › should aggregate portfolio data\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '_id')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 444 |\u001b[39m       \u001b[90m// Create multiple portfolios\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 445 |\u001b[39m       \u001b[36mconst\u001b[39m portfolio1 \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mUserPortfolio\u001b[39m({\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 446 |\u001b[39m         userId\u001b[33m:\u001b[39m testUser\u001b[33m.\u001b[39m_id\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 447 |\u001b[39m         funds\u001b[33m:\u001b[39m [{\u001b[22m\n\u001b[2m     \u001b[90m 448 |\u001b[39m           schemeCode\u001b[33m:\u001b[39m \u001b[32m'TEST001'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 449 |\u001b[39m           schemeName\u001b[33m:\u001b[39m \u001b[32m'Test Fund 1'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object._id (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/core-backend.test.js\u001b[39m\u001b[0m\u001b[2m:446:26)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\core-backend.test.js","startTime":1752862022410,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Basic Functionality Tests","Database Operations"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"Test User","expected":"Updated User","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mUpdated\u001b[27m User\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mTest\u001b[27m User\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mUpdated\u001b[27m User\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mTest\u001b[27m User\"\u001b[39m\n    at Object.toBe (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\basic-functionality.test.js:50:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Basic Functionality Tests Database Operations should perform CRUD operations on User","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should perform CRUD operations on User"},{"ancestorTitles":["Basic Functionality Tests","Database Operations"],"duration":3,"failureDetails":[{"matcherResult":{"actual":"SUCCESS","expected":"PROCESSING","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"PROCESSING\"\u001b[39m\nReceived: \u001b[31m\"SUCCESS\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"PROCESSING\"\u001b[39m\nReceived: \u001b[31m\"SUCCESS\"\u001b[39m\n    at Object.toBe (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\basic-functionality.test.js:74:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Basic Functionality Tests Database Operations should perform CRUD operations on Transaction","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should perform CRUD operations on Transaction"},{"ancestorTitles":["Basic Functionality Tests","Data Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Basic Functionality Tests Data Validation should validate required fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate required fields"},{"ancestorTitles":["Basic Functionality Tests","Test Utilities"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"mockUserId","expected":"mockUserId","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: not \u001b[32m\"mockUserId\"\u001b[39m","name":"toBe","pass":true}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: not \u001b[32m\"mockUserId\"\u001b[39m\n    at Object.toBe (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\basic-functionality.test.js:115:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Basic Functionality Tests Test Utilities should generate unique test data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should generate unique test data"},{"ancestorTitles":["Basic Functionality Tests","Test Utilities"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Basic Functionality Tests Test Utilities should create related data correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create related data correctly"}],"endTime":1752862023658,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mBasic Functionality Tests › Database Operations › should perform CRUD operations on User\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7mUpdated\u001b[27m User\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7mTest\u001b[27m User\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m       \u001b[36mawait\u001b[39m foundUser\u001b[33m.\u001b[39msave()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m       \u001b[36mconst\u001b[39m updatedUser \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mUser\u001b[39m\u001b[33m.\u001b[39mfindById(user\u001b[33m.\u001b[39m_id)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m       expect(updatedUser\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Updated User'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       \u001b[90m// Delete\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       \u001b[36mawait\u001b[39m \u001b[33mUser\u001b[39m\u001b[33m.\u001b[39mfindByIdAndDelete(user\u001b[33m.\u001b[39m_id)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/basic-functionality.test.js\u001b[39m\u001b[0m\u001b[2m:50:32)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mBasic Functionality Tests › Database Operations › should perform CRUD operations on Transaction\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"PROCESSING\"\u001b[39m\n    Received: \u001b[31m\"SUCCESS\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 |\u001b[39m       \u001b[36mawait\u001b[39m foundTransaction\u001b[33m.\u001b[39msave()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m       \u001b[36mconst\u001b[39m updatedTransaction \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTransaction\u001b[39m\u001b[33m.\u001b[39mfindById(transaction\u001b[33m.\u001b[39m_id)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 74 |\u001b[39m       expect(updatedTransaction\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'PROCESSING'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m       \u001b[90m// Delete\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 77 |\u001b[39m       \u001b[36mawait\u001b[39m \u001b[33mTransaction\u001b[39m\u001b[33m.\u001b[39mfindByIdAndDelete(transaction\u001b[33m.\u001b[39m_id)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/basic-functionality.test.js\u001b[39m\u001b[0m\u001b[2m:74:41)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mBasic Functionality Tests › Test Utilities › should generate unique test data\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: not \u001b[32m\"mockUserId\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 113 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m       expect(user1\u001b[33m.\u001b[39memail)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(user2\u001b[33m.\u001b[39memail)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 115 |\u001b[39m       expect(user1\u001b[33m.\u001b[39m_id\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(user2\u001b[33m.\u001b[39m_id\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m     test(\u001b[32m'should create related data correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/basic-functionality.test.js\u001b[39m\u001b[0m\u001b[2m:115:40)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\basic-functionality.test.js","startTime":1752862023153,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["validation","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["validation","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["validation","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["validation","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["validation","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["validation","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["validation","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["validation","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["validation","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"validation Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["validation","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["validation","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["validation","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["validation","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["validation","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["validation","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["validation","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["validation","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["validation","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["validation","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["validation","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["validation","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["validation","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["validation","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"validation Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862024633,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\validation.test.js","startTime":1752862023671,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["portfolioAnalyticsService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"},{"ancestorTitles":["portfolioAnalyticsService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have required methods"},{"ancestorTitles":["portfolioAnalyticsService","Basic functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["portfolioAnalyticsService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input data"},{"ancestorTitles":["portfolioAnalyticsService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject invalid data"},{"ancestorTitles":["portfolioAnalyticsService","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should perform calculations correctly"},{"ancestorTitles":["portfolioAnalyticsService","Business logic"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle edge cases"},{"ancestorTitles":["portfolioAnalyticsService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate with other services"},{"ancestorTitles":["portfolioAnalyticsService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle external API calls"},{"ancestorTitles":["portfolioAnalyticsService","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large datasets"},{"ancestorTitles":["portfolioAnalyticsService","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond within acceptable time"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 1"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 2"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 3"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 4"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 5"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 6"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 7"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 8"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 9"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 10"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 11"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 12"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 13"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 14"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 15"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 16"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 17"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 18"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 19"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 20"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 21"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 22"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 23"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 24"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 25"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 26"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 27"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 28"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 29"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 30"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 31"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 32"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 33"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 34"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 35"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 36"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 37"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 38"},{"ancestorTitles":["portfolioAnalyticsService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"portfolioAnalyticsService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 39"}],"endTime":1752862025515,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Basic functionality › should be defined\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Basic functionality › should have required methods\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Basic functionality › should handle errors gracefully\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Data validation › should validate input data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Data validation › should reject invalid data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Business logic › should perform calculations correctly\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Business logic › should handle edge cases\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Integration › should integrate with other services\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Integration › should handle external API calls\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Performance › should handle large datasets\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Performance › should respond within acceptable time\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 1\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 2\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 3\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 4\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 5\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 6\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 7\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 8\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 9\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 10\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 11\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 12\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 13\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 14\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 15\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 16\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 17\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 18\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 19\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 20\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 21\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 22\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 23\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 24\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 25\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 26\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 27\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 28\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 29\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 30\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 31\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 32\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 33\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 34\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 35\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 36\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 37\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 38\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mportfolioAnalyticsService › Extended functionality › should handle scenario 39\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/portfolioAnalyticsService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAnalyticsService.test.js","startTime":1752862024660,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["adminAuth","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["adminAuth","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["adminAuth","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["adminAuth","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["adminAuth","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["adminAuth","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["adminAuth","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["adminAuth","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["adminAuth","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["adminAuth","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["adminAuth","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["adminAuth","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminAuth Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862026448,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\adminAuth.test.js","startTime":1752862025549,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["authController","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"},{"ancestorTitles":["authController","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have required methods"},{"ancestorTitles":["authController","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["authController","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input data"},{"ancestorTitles":["authController","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject invalid data"},{"ancestorTitles":["authController","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should perform calculations correctly"},{"ancestorTitles":["authController","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle edge cases"},{"ancestorTitles":["authController","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate with other services"},{"ancestorTitles":["authController","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle external API calls"},{"ancestorTitles":["authController","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large datasets"},{"ancestorTitles":["authController","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond within acceptable time"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 1"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 2"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 3"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 4"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 5"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 6"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 7"},{"ancestorTitles":["authController","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 8"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 9"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 10"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 11"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 12"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 13"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 14"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 15"},{"ancestorTitles":["authController","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 16"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 17"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 18"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 19"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 20"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 21"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 22"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 23"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 24"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 25"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 26"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 27"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 28"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 29"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 30"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 31"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 32"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 33"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 34"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 35"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 36"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 37"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 38"},{"ancestorTitles":["authController","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"authController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 39"}],"endTime":1752862027349,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Basic functionality › should be defined\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Basic functionality › should have required methods\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Basic functionality › should handle errors gracefully\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Data validation › should validate input data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Data validation › should reject invalid data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Business logic › should perform calculations correctly\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Business logic › should handle edge cases\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Integration › should integrate with other services\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Integration › should handle external API calls\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Performance › should handle large datasets\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Performance › should respond within acceptable time\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 1\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 2\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 3\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 4\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 5\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 6\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 7\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 8\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 9\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 10\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 11\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 12\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 13\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 14\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 15\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 16\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 17\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 18\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 19\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 20\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 21\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 22\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 23\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 24\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 25\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 26\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 27\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 28\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 29\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 30\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 31\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 32\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 33\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 34\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 35\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 36\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 37\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 38\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauthController › Extended functionality › should handle scenario 39\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/controllers/authController.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\authController.test.js","startTime":1752862026471,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["authenticateUser","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["authenticateUser","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["authenticateUser","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["authenticateUser","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["authenticateUser","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["authenticateUser","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["authenticateUser","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["authenticateUser","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["authenticateUser","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["authenticateUser","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["authenticateUser","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["authenticateUser","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"authenticateUser Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862028226,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\authenticateUser.test.js","startTime":1752862027389,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["chartDataService","Basic functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"},{"ancestorTitles":["chartDataService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have required methods"},{"ancestorTitles":["chartDataService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["chartDataService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input data"},{"ancestorTitles":["chartDataService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject invalid data"},{"ancestorTitles":["chartDataService","Business logic"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should perform calculations correctly"},{"ancestorTitles":["chartDataService","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle edge cases"},{"ancestorTitles":["chartDataService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate with other services"},{"ancestorTitles":["chartDataService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle external API calls"},{"ancestorTitles":["chartDataService","Performance"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large datasets"},{"ancestorTitles":["chartDataService","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond within acceptable time"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 1"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 2"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 3"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 4"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 5"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 6"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 7"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 8"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 9"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 10"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 11"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 12"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 13"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 14"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 15"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 16"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 17"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 18"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 19"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 20"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 21"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 22"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 23"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 24"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 25"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 26"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 27"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 28"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 29"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 30"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 31"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 32"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 33"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 34"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 35"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 36"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 37"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 38"},{"ancestorTitles":["chartDataService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"chartDataService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 39"}],"endTime":1752862029473,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Basic functionality › should be defined\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Basic functionality › should have required methods\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Basic functionality › should handle errors gracefully\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Data validation › should validate input data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Data validation › should reject invalid data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Business logic › should perform calculations correctly\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Business logic › should handle edge cases\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Integration › should integrate with other services\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Integration › should handle external API calls\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Performance › should handle large datasets\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Performance › should respond within acceptable time\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 1\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 2\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 3\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 4\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 5\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 6\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 7\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 8\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 9\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 10\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 11\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 12\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 13\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 14\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 15\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 16\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 17\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 18\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 19\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 20\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 21\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 22\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 23\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 24\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 25\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 26\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 27\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 28\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 29\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 30\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 31\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 32\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 33\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 34\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 35\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 36\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 37\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 38\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchartDataService › Extended functionality › should handle scenario 39\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/chartDataService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\chartDataService.test.js","startTime":1752862028247,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["whatsAppService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"},{"ancestorTitles":["whatsAppService","Basic functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have required methods"},{"ancestorTitles":["whatsAppService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["whatsAppService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input data"},{"ancestorTitles":["whatsAppService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject invalid data"},{"ancestorTitles":["whatsAppService","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should perform calculations correctly"},{"ancestorTitles":["whatsAppService","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle edge cases"},{"ancestorTitles":["whatsAppService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate with other services"},{"ancestorTitles":["whatsAppService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle external API calls"},{"ancestorTitles":["whatsAppService","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large datasets"},{"ancestorTitles":["whatsAppService","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond within acceptable time"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 1"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 2"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 3"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 4"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 5"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 6"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 7"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 8"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 9"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 10"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 11"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 12"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 13"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 14"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 15"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 16"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 17"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 18"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 19"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 20"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 21"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 22"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 23"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 24"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 25"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 26"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 27"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 28"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 29"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 30"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 31"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 32"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 33"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 34"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 35"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 36"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 37"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 38"},{"ancestorTitles":["whatsAppService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"whatsAppService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 39"}],"endTime":1752862030885,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Basic functionality › should be defined\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Basic functionality › should have required methods\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Basic functionality › should handle errors gracefully\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Data validation › should validate input data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Data validation › should reject invalid data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Business logic › should perform calculations correctly\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Business logic › should handle edge cases\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Integration › should integrate with other services\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Integration › should handle external API calls\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Performance › should handle large datasets\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Performance › should respond within acceptable time\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 1\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 2\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 3\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 4\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 5\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 6\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 7\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 8\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 9\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 10\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 11\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 12\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 13\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 14\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 15\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 16\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 17\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 18\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 19\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 20\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 21\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 22\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 23\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 24\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 25\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 26\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 27\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 28\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 29\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 30\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 31\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 32\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 33\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 34\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 35\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 36\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 37\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 38\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwhatsAppService › Extended functionality › should handle scenario 39\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/whatsAppService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\whatsAppService.test.js","startTime":1752862029516,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["auth","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"},{"ancestorTitles":["auth","Basic functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have required methods"},{"ancestorTitles":["auth","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["auth","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input data"},{"ancestorTitles":["auth","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject invalid data"},{"ancestorTitles":["auth","Business logic"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should perform calculations correctly"},{"ancestorTitles":["auth","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle edge cases"},{"ancestorTitles":["auth","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate with other services"},{"ancestorTitles":["auth","Integration"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle external API calls"},{"ancestorTitles":["auth","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large datasets"},{"ancestorTitles":["auth","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond within acceptable time"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 1"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 2"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 3"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 4"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 5"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 6"},{"ancestorTitles":["auth","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 7"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 8"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 9"},{"ancestorTitles":["auth","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 10"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 11"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 12"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 13"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 14"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 15"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 16"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 17"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 18"},{"ancestorTitles":["auth","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 19"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 20"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 21"},{"ancestorTitles":["auth","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 22"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 23"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 24"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 25"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 26"},{"ancestorTitles":["auth","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 27"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 28"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 29"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 30"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 31"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 32"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 33"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 34"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 35"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 36"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 37"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 38"},{"ancestorTitles":["auth","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"auth Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 39"}],"endTime":1752862032455,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Basic functionality › should be defined\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Basic functionality › should have required methods\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Basic functionality › should handle errors gracefully\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Data validation › should validate input data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Data validation › should reject invalid data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Business logic › should perform calculations correctly\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Business logic › should handle edge cases\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Integration › should integrate with other services\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Integration › should handle external API calls\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Performance › should handle large datasets\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Performance › should respond within acceptable time\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 1\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 2\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 3\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 4\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 5\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 6\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 7\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 8\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 9\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 10\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 11\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 12\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 13\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 14\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 15\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 16\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 17\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 18\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 19\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 20\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 21\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 22\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 23\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 24\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 25\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 26\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 27\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 28\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 29\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 30\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 31\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 32\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 33\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 34\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 35\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 36\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 37\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 38\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mauth › Extended functionality › should handle scenario 39\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/middleware/auth.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\auth.test.js","startTime":1752862030926,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["aiPortfolioOptimizer","Basic functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"},{"ancestorTitles":["aiPortfolioOptimizer","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have required methods"},{"ancestorTitles":["aiPortfolioOptimizer","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["aiPortfolioOptimizer","Data validation"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input data"},{"ancestorTitles":["aiPortfolioOptimizer","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject invalid data"},{"ancestorTitles":["aiPortfolioOptimizer","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should perform calculations correctly"},{"ancestorTitles":["aiPortfolioOptimizer","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle edge cases"},{"ancestorTitles":["aiPortfolioOptimizer","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate with other services"},{"ancestorTitles":["aiPortfolioOptimizer","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle external API calls"},{"ancestorTitles":["aiPortfolioOptimizer","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large datasets"},{"ancestorTitles":["aiPortfolioOptimizer","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond within acceptable time"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 1"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 2"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 3"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 4"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 5"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 6"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 7"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 8"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 9"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 10"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 11"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 12"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 13"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 14"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 15"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 16"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 17"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 18"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 19"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 20"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 21"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 22"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 23"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 24"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 25"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 26"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 27"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 28"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 29"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 30"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 31"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 32"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 33"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 34"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 35"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 36"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 37"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 38"},{"ancestorTitles":["aiPortfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"aiPortfolioOptimizer Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 39"}],"endTime":1752862034142,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Basic functionality › should be defined\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Basic functionality › should have required methods\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Basic functionality › should handle errors gracefully\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Data validation › should validate input data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Data validation › should reject invalid data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Business logic › should perform calculations correctly\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Business logic › should handle edge cases\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Integration › should integrate with other services\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Integration › should handle external API calls\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Performance › should handle large datasets\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Performance › should respond within acceptable time\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 1\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 2\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 3\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 4\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 5\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 6\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 7\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 8\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 9\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 10\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 11\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 12\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 13\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 14\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 15\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 16\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 17\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 18\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 19\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 20\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 21\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 22\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 23\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 24\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 25\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 26\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 27\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 28\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 29\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 30\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 31\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 32\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 33\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 34\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 35\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 36\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 37\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 38\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1maiPortfolioOptimizer › Extended functionality › should handle scenario 39\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/aiPortfolioOptimizer.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiPortfolioOptimizer.test.js","startTime":1752862032510,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["errorHandler","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["errorHandler","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["errorHandler","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["errorHandler","Data validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["errorHandler","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["errorHandler","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["errorHandler","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["errorHandler","Integration"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["errorHandler","Integration"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["errorHandler","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["errorHandler","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["errorHandler","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"errorHandler Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862035499,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\errorHandler.test.js","startTime":1752862034177,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ollamaService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be defined"},{"ancestorTitles":["ollamaService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should have required methods"},{"ancestorTitles":["ollamaService","Basic functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors gracefully"},{"ancestorTitles":["ollamaService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input data"},{"ancestorTitles":["ollamaService","Data validation"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should reject invalid data"},{"ancestorTitles":["ollamaService","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should perform calculations correctly"},{"ancestorTitles":["ollamaService","Business logic"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle edge cases"},{"ancestorTitles":["ollamaService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate with other services"},{"ancestorTitles":["ollamaService","Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle external API calls"},{"ancestorTitles":["ollamaService","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large datasets"},{"ancestorTitles":["ollamaService","Performance"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond within acceptable time"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 1"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 2"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 3"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 4"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 5"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 6"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 7"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 8"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 9"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 10"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 11"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 12"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 13"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 14"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 15"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 16"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 17"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 18"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 19"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 20"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 21"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 22"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 23"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 24"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 25"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 26"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 27"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 28"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 29"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 30"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 31"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 32"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 33"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 34"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 35"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 36"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 37"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 38"},{"ancestorTitles":["ollamaService","Extended functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n    at NativeConnection.createClient (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:251:13)\n    at NativeConnection.openUri (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\connection.js:1071:34)\n    at Mongoose.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\node_modules\\mongoose\\lib\\mongoose.js:450:15)\n    at Object.connect (C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ollamaService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle scenario 39"}],"endTime":1752862036626,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Basic functionality › should be defined\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Basic functionality › should have required methods\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Basic functionality › should handle errors gracefully\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Data validation › should validate input data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Data validation › should reject invalid data\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Business logic › should perform calculations correctly\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Business logic › should handle edge cases\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Integration › should integrate with other services\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Integration › should handle external API calls\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Performance › should handle large datasets\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Performance › should respond within acceptable time\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 1\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 2\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 3\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 4\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 5\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 6\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 7\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 8\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 9\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 10\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 11\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 12\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 13\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 14\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 15\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 16\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 17\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 18\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 19\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 20\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 21\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 22\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 23\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 24\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 25\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 26\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 27\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 28\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 29\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 30\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 31\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 32\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 33\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 34\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 35\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 36\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 37\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 38\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mollamaService › Extended functionality › should handle scenario 39\u001b[39m\u001b[22m\n\n    MongooseError: Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m mongoUri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(mongoUri)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.createClient (\u001b[22m\u001b[2mnode_modules/mongoose/lib/drivers/node-mongodb-native/connection.js\u001b[2m:251:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NativeConnection.openUri (\u001b[22m\u001b[2mnode_modules/mongoose/lib/connection.js\u001b[2m:1071:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Mongoose.connect (\u001b[22m\u001b[2mnode_modules/mongoose/lib/mongoose.js\u001b[2m:450:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.connect (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/services/ollamaService.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ollamaService.test.js","startTime":1752862035516,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["agiService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["agiService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["agiService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["agiService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["agiService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["agiService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["agiService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["agiService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["agiService","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["agiService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["agiService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["agiService","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["agiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["agiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["agiService","Extended functionality"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["agiService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862037894,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\agiService.test.js","startTime":1752862036676,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["rateLimiter","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["rateLimiter","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["rateLimiter","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["rateLimiter","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["rateLimiter","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["rateLimiter","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["rateLimiter","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["rateLimiter","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["rateLimiter","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["rateLimiter","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["rateLimiter","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["rateLimiter","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rateLimiter Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862039143,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\middleware\\rateLimiter.test.js","startTime":1752862037919,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["voiceBotController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["voiceBotController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["voiceBotController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["voiceBotController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["voiceBotController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["voiceBotController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["voiceBotController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["voiceBotController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["voiceBotController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["voiceBotController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["voiceBotController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["voiceBotController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBotController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862039899,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\voiceBotController.test.js","startTime":1752862039164,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["whatsAppController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["whatsAppController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["whatsAppController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["whatsAppController","Data validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["whatsAppController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["whatsAppController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["whatsAppController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["whatsAppController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["whatsAppController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["whatsAppController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["whatsAppController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["whatsAppController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"whatsAppController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862040543,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\whatsAppController.test.js","startTime":1752862039919,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["roboAdvisorController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["roboAdvisorController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["roboAdvisorController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["roboAdvisorController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["roboAdvisorController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["roboAdvisorController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["roboAdvisorController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["roboAdvisorController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["roboAdvisorController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["roboAdvisorController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["roboAdvisorController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["roboAdvisorController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisorController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862041313,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\roboAdvisorController.test.js","startTime":1752862040563,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862041838,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioDataManager.test.js","startTime":1752862041331,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["benchmarkService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["benchmarkService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["benchmarkService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["benchmarkService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["benchmarkService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["benchmarkService","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["benchmarkService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["benchmarkService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["benchmarkService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["benchmarkService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["benchmarkService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["benchmarkService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862042543,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\benchmarkService.test.js","startTime":1752862041848,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["roboAdvisor","Basic functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["roboAdvisor","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["roboAdvisor","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["roboAdvisor","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["roboAdvisor","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["roboAdvisor","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["roboAdvisor","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["roboAdvisor","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["roboAdvisor","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["roboAdvisor","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["roboAdvisor","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["roboAdvisor","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"roboAdvisor Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862043236,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\roboAdvisor.test.js","startTime":1752862042562,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Referral","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Referral","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Referral","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Referral","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Referral","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Referral","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Referral","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Referral","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Referral","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Referral","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Referral","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Referral","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Referral","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Referral","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Referral","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Referral Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862043837,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Referral.test.js","startTime":1752862043266,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Challenge","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Challenge","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Challenge","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Challenge","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Challenge","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Challenge","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Challenge","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Challenge","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Challenge","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Challenge","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Challenge","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Challenge","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Challenge Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862044516,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Challenge.test.js","startTime":1752862043856,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["dashboardService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["dashboardService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["dashboardService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["dashboardService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["dashboardService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["dashboardService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["dashboardService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["dashboardService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["dashboardService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["dashboardService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["dashboardService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["dashboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862045112,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\dashboardService.test.js","startTime":1752862044532,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["riskProfilingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["riskProfilingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["riskProfilingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["riskProfilingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["riskProfilingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["riskProfilingService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["riskProfilingService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["riskProfilingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["riskProfilingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["riskProfilingService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["riskProfilingService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["riskProfilingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"riskProfilingService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862045621,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\riskProfilingService.test.js","startTime":1752862045132,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["pdfStatementController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["pdfStatementController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["pdfStatementController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["pdfStatementController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["pdfStatementController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["pdfStatementController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["pdfStatementController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["pdfStatementController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["pdfStatementController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["pdfStatementController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["pdfStatementController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["pdfStatementController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862046246,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\pdfStatementController.test.js","startTime":1752862045643,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["advancedAIService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["advancedAIService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["advancedAIService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["advancedAIService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["advancedAIService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["advancedAIService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["advancedAIService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["advancedAIService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["advancedAIService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["advancedAIService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["advancedAIService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["advancedAIService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedAIService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862046765,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\advancedAIService.test.js","startTime":1752862046282,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["gamificationService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["gamificationService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["gamificationService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["gamificationService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["gamificationService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["gamificationService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["gamificationService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["gamificationService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["gamificationService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["gamificationService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["gamificationService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["gamificationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"gamificationService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862047498,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\gamificationService.test.js","startTime":1752862046782,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["bseStarMFController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["bseStarMFController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["bseStarMFController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["bseStarMFController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["bseStarMFController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["bseStarMFController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["bseStarMFController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["bseStarMFController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["bseStarMFController","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["bseStarMFController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["bseStarMFController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["bseStarMFController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862048085,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\bseStarMFController.test.js","startTime":1752862047513,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UserPortfolio","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["UserPortfolio","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["UserPortfolio","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["UserPortfolio","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["UserPortfolio","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["UserPortfolio","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["UserPortfolio","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["UserPortfolio","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["UserPortfolio","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["UserPortfolio","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["UserPortfolio","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["UserPortfolio","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserPortfolio Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862048668,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\UserPortfolio.test.js","startTime":1752862048101,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Transaction","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Transaction","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Transaction","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Transaction","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Transaction","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Transaction","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Transaction","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Transaction","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Transaction","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Transaction","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Transaction","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Transaction","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Transaction Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862049182,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Transaction.test.js","startTime":1752862048688,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["dashboardEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["dashboardEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["dashboardEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["dashboardEngine","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["dashboardEngine","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["dashboardEngine","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["dashboardEngine","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["dashboardEngine","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["dashboardEngine","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["dashboardEngine","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["dashboardEngine","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["dashboardEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardEngine Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862049766,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\dashboardEngine.test.js","startTime":1752862049195,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EconomicIndicator","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["EconomicIndicator","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["EconomicIndicator","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["EconomicIndicator","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["EconomicIndicator","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["EconomicIndicator","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["EconomicIndicator","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["EconomicIndicator","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["EconomicIndicator","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["EconomicIndicator","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["EconomicIndicator","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["EconomicIndicator","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EconomicIndicator Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862050265,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\EconomicIndicator.test.js","startTime":1752862049778,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["socialTradingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["socialTradingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["socialTradingService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["socialTradingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["socialTradingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["socialTradingService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["socialTradingService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["socialTradingService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["socialTradingService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["socialTradingService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["socialTradingService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["socialTradingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialTradingService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862050855,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\socialTradingService.test.js","startTime":1752862050292,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["WhatsAppMessage","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["WhatsAppMessage","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["WhatsAppMessage","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["WhatsAppMessage","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["WhatsAppMessage","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["WhatsAppMessage","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["WhatsAppMessage","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["WhatsAppMessage","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["WhatsAppMessage","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["WhatsAppMessage","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["WhatsAppMessage","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["WhatsAppMessage","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppMessage Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862051375,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\WhatsAppMessage.test.js","startTime":1752862050872,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["regionalLanguageController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["regionalLanguageController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["regionalLanguageController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["regionalLanguageController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["regionalLanguageController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["regionalLanguageController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["regionalLanguageController","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["regionalLanguageController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["regionalLanguageController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["regionalLanguageController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["regionalLanguageController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["regionalLanguageController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862051976,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\regionalLanguageController.test.js","startTime":1752862051391,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["taxCalculationService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["taxCalculationService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["taxCalculationService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["taxCalculationService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["taxCalculationService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["taxCalculationService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["taxCalculationService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["taxCalculationService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["taxCalculationService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["taxCalculationService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["taxCalculationService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["taxCalculationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxCalculationService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862052486,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\taxCalculationService.test.js","startTime":1752862051987,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["leaderboardService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["leaderboardService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["leaderboardService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["leaderboardService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["leaderboardService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["leaderboardService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["leaderboardService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["leaderboardService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["leaderboardService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["leaderboardService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["leaderboardService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["leaderboardService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862053171,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\leaderboardService.test.js","startTime":1752862052500,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["esgSustainableInvestingService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["esgSustainableInvestingService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["esgSustainableInvestingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["esgSustainableInvestingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["esgSustainableInvestingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["esgSustainableInvestingService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["esgSustainableInvestingService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["esgSustainableInvestingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["esgSustainableInvestingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["esgSustainableInvestingService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["esgSustainableInvestingService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["esgSustainableInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"esgSustainableInvestingService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862053661,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\esgSustainableInvestingService.test.js","startTime":1752862053181,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Leaderboard","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Leaderboard","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Leaderboard","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Leaderboard","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Leaderboard","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Leaderboard","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Leaderboard","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Leaderboard","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Leaderboard","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Leaderboard","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Leaderboard","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Leaderboard","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Leaderboard Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862054242,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Leaderboard.test.js","startTime":1752862053673,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["WhatsAppSession","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["WhatsAppSession","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["WhatsAppSession","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["WhatsAppSession","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["WhatsAppSession","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["WhatsAppSession","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["WhatsAppSession","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["WhatsAppSession","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["WhatsAppSession","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["WhatsAppSession","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["WhatsAppSession","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["WhatsAppSession","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"WhatsAppSession Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862054726,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\WhatsAppSession.test.js","startTime":1752862054254,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AGIInsight","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["AGIInsight","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["AGIInsight","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["AGIInsight","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["AGIInsight","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["AGIInsight","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["AGIInsight","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["AGIInsight","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["AGIInsight","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["AGIInsight","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["AGIInsight","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["AGIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AGIInsight Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862055309,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\AGIInsight.test.js","startTime":1752862054738,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PortfolioCopy","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["PortfolioCopy","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["PortfolioCopy","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["PortfolioCopy","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["PortfolioCopy","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["PortfolioCopy","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["PortfolioCopy","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["PortfolioCopy","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["PortfolioCopy","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["PortfolioCopy","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["PortfolioCopy","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["PortfolioCopy","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PortfolioCopy Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862055803,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\PortfolioCopy.test.js","startTime":1752862055325,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["trainingDataService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["trainingDataService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["trainingDataService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["trainingDataService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["trainingDataService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["trainingDataService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["trainingDataService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["trainingDataService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["trainingDataService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["trainingDataService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["trainingDataService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["trainingDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"trainingDataService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862056427,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\trainingDataService.test.js","startTime":1752862055817,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["regionalLanguageService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["regionalLanguageService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["regionalLanguageService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["regionalLanguageService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["regionalLanguageService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["regionalLanguageService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["regionalLanguageService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["regionalLanguageService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["regionalLanguageService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["regionalLanguageService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["regionalLanguageService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["regionalLanguageService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"regionalLanguageService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862056932,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\regionalLanguageService.test.js","startTime":1752862056440,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["pdfStatementService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["pdfStatementService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["pdfStatementService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["pdfStatementService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["pdfStatementService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["pdfStatementService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["pdfStatementService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["pdfStatementService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["pdfStatementService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["pdfStatementService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["pdfStatementService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["pdfStatementService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pdfStatementService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862057538,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\pdfStatementService.test.js","startTime":1752862056947,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["tierOutreachService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["tierOutreachService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["tierOutreachService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["tierOutreachService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["tierOutreachService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["tierOutreachService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["tierOutreachService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["tierOutreachService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["tierOutreachService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["tierOutreachService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["tierOutreachService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["tierOutreachService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862058064,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\tierOutreachService.test.js","startTime":1752862057554,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["User","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["User","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["User","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"User Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["User","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["User","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["User","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["User","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["User","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["User","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["User","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["User","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["User","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["User","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862058685,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\User.test.js","startTime":1752862058085,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["bseStarMFService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["bseStarMFService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["bseStarMFService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["bseStarMFService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["bseStarMFService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["bseStarMFService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["bseStarMFService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["bseStarMFService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["bseStarMFService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["bseStarMFService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["bseStarMFService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["bseStarMFService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"bseStarMFService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862059185,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\bseStarMFService.test.js","startTime":1752862058701,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["agiController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["agiController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["agiController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["agiController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["agiController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["agiController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["agiController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["agiController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["agiController","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["agiController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["agiController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["agiController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["agiController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["agiController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["agiController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["agiController","Extended functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["agiController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["agiController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["agiController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["agiController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862059869,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\agiController.test.js","startTime":1752862059202,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["fundComparisonService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["fundComparisonService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["fundComparisonService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["fundComparisonService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["fundComparisonService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["fundComparisonService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["fundComparisonService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["fundComparisonService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["fundComparisonService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["fundComparisonService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["fundComparisonService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["fundComparisonService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"fundComparisonService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862060375,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\fundComparisonService.test.js","startTime":1752862059885,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["aiPortfolioController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["aiPortfolioController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["aiPortfolioController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["aiPortfolioController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["aiPortfolioController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["aiPortfolioController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["aiPortfolioController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["aiPortfolioController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["aiPortfolioController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["aiPortfolioController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["aiPortfolioController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["aiPortfolioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiPortfolioController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862061063,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\aiPortfolioController.test.js","startTime":1752862060392,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SipOrder","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["SipOrder","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["SipOrder","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["SipOrder","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["SipOrder","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["SipOrder","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["SipOrder","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["SipOrder","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["SipOrder","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["SipOrder","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["SipOrder","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["SipOrder","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SipOrder Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862061543,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\SipOrder.test.js","startTime":1752862061081,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["RewardSummary","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["RewardSummary","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["RewardSummary","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["RewardSummary","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["RewardSummary","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["RewardSummary","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["RewardSummary","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["RewardSummary","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["RewardSummary","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["RewardSummary","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["RewardSummary","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["RewardSummary","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RewardSummary Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862062189,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\RewardSummary.test.js","startTime":1752862061555,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["rewardsService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["rewardsService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["rewardsService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["rewardsService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["rewardsService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["rewardsService","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["rewardsService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["rewardsService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["rewardsService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["rewardsService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["rewardsService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["rewardsService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"rewardsService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862062733,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\rewardsService.test.js","startTime":1752862062209,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["portfolioOptimizer","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["portfolioOptimizer","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["portfolioOptimizer","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["portfolioOptimizer","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["portfolioOptimizer","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["portfolioOptimizer","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["portfolioOptimizer","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["portfolioOptimizer","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["portfolioOptimizer","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["portfolioOptimizer","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["portfolioOptimizer","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["portfolioOptimizer","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"portfolioOptimizer Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862063473,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioOptimizer.test.js","startTime":1752862062762,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["complianceService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["complianceService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["complianceService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["complianceService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["complianceService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["complianceService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["complianceService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["complianceService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["complianceService","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["complianceService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["complianceService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["complianceService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862064241,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\complianceService.test.js","startTime":1752862063492,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ragService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["ragService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["ragService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["ragService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["ragService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["ragService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["ragService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["ragService","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["ragService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["ragService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["ragService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["ragService","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["ragService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["ragService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["ragService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["ragService","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["ragService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["ragService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["ragService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ragService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862065218,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\ragService.test.js","startTime":1752862064268,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["nseService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["nseService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["nseService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["nseService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["nseService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["nseService","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["nseService","Business logic"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"nseService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["nseService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["nseService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["nseService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["nseService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"nseService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["nseService","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["nseService","Extended functionality"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["nseService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["nseService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["nseService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"nseService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862066015,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\nseService.test.js","startTime":1752862065241,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["marketScoreService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["marketScoreService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["marketScoreService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["marketScoreService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["marketScoreService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["marketScoreService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["marketScoreService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["marketScoreService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["marketScoreService","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["marketScoreService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["marketScoreService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["marketScoreService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketScoreService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862066936,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\marketScoreService.test.js","startTime":1752862066035,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["investmentCalculatorService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["investmentCalculatorService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["investmentCalculatorService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["investmentCalculatorService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["investmentCalculatorService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["investmentCalculatorService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["investmentCalculatorService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["investmentCalculatorService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["investmentCalculatorService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["investmentCalculatorService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["investmentCalculatorService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["investmentCalculatorService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"investmentCalculatorService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862067683,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\investmentCalculatorService.test.js","startTime":1752862066957,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["smartSipController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["smartSipController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["smartSipController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["smartSipController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["smartSipController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["smartSipController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["smartSipController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["smartSipController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["smartSipController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["smartSipController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["smartSipController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["smartSipController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"smartSipController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862068628,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\smartSipController.test.js","startTime":1752862067704,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["socialInvestingController","Basic functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["socialInvestingController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["socialInvestingController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["socialInvestingController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["socialInvestingController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["socialInvestingController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["socialInvestingController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["socialInvestingController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["socialInvestingController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["socialInvestingController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["socialInvestingController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["socialInvestingController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862069425,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\socialInvestingController.test.js","startTime":1752862068651,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UserBehavior","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["UserBehavior","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["UserBehavior","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["UserBehavior","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["UserBehavior","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["UserBehavior","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["UserBehavior","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["UserBehavior","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["UserBehavior","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["UserBehavior","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["UserBehavior","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["UserBehavior","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"UserBehavior Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862070341,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\UserBehavior.test.js","startTime":1752862069444,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["BenchmarkIndex","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["BenchmarkIndex","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["BenchmarkIndex","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["BenchmarkIndex","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["BenchmarkIndex","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["BenchmarkIndex","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["BenchmarkIndex","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["BenchmarkIndex","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["BenchmarkIndex","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["BenchmarkIndex","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["BenchmarkIndex","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["BenchmarkIndex","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkIndex Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862071081,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\BenchmarkIndex.test.js","startTime":1752862070360,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["scalabilityReliabilityService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["scalabilityReliabilityService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["scalabilityReliabilityService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["scalabilityReliabilityService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["scalabilityReliabilityService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["scalabilityReliabilityService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["scalabilityReliabilityService","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["scalabilityReliabilityService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["scalabilityReliabilityService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["scalabilityReliabilityService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["scalabilityReliabilityService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["scalabilityReliabilityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"scalabilityReliabilityService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862072014,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\scalabilityReliabilityService.test.js","startTime":1752862071103,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["agiEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["agiEngine","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["agiEngine","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["agiEngine","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["agiEngine","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["agiEngine","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["agiEngine","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["agiEngine","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["agiEngine","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["agiEngine","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["agiEngine","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["agiEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"agiEngine Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862072730,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\agiEngine.test.js","startTime":1752862072033,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Achievement","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Achievement","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Achievement","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Achievement","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Achievement","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Achievement","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Achievement","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Achievement","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Achievement","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Achievement","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Achievement","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Achievement","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Achievement Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862073556,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Achievement.test.js","startTime":1752862072751,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["advancedSecurityService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["advancedSecurityService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["advancedSecurityService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["advancedSecurityService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["advancedSecurityService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["advancedSecurityService","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["advancedSecurityService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["advancedSecurityService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["advancedSecurityService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["advancedSecurityService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["advancedSecurityService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["advancedSecurityService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"advancedSecurityService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862074346,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\advancedSecurityService.test.js","startTime":1752862073579,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["taxOptimizationService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["taxOptimizationService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["taxOptimizationService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["taxOptimizationService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["taxOptimizationService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["taxOptimizationService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["taxOptimizationService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["taxOptimizationService","Integration"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["taxOptimizationService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["taxOptimizationService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["taxOptimizationService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["taxOptimizationService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"taxOptimizationService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862075169,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\taxOptimizationService.test.js","startTime":1752862074368,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MarketData","Basic functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["MarketData","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["MarketData","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["MarketData","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["MarketData","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["MarketData","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["MarketData","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["MarketData","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["MarketData","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["MarketData","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["MarketData","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["MarketData","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarketData Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862075860,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\MarketData.test.js","startTime":1752862075189,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["predictiveEngine","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["predictiveEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["predictiveEngine","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["predictiveEngine","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["predictiveEngine","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["predictiveEngine","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["predictiveEngine","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["predictiveEngine","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["predictiveEngine","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["predictiveEngine","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["predictiveEngine","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["predictiveEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"predictiveEngine Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862076675,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\predictiveEngine.test.js","startTime":1752862075880,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["analyticsController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["analyticsController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["analyticsController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["analyticsController","Data validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["analyticsController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["analyticsController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["analyticsController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["analyticsController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["analyticsController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["analyticsController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["analyticsController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["analyticsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyticsController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862077434,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\analyticsController.test.js","startTime":1752862076697,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["voiceBot","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["voiceBot","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["voiceBot","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["voiceBot","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["voiceBot","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["voiceBot","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["voiceBot","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["voiceBot","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["voiceBot","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["voiceBot","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["voiceBot","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["voiceBot","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"voiceBot Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862078295,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\voiceBot.test.js","startTime":1752862077457,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["leaderboardCronService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["leaderboardCronService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["leaderboardCronService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["leaderboardCronService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["leaderboardCronService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["leaderboardCronService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["leaderboardCronService","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["leaderboardCronService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["leaderboardCronService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["leaderboardCronService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["leaderboardCronService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["leaderboardCronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardCronService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862079095,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\leaderboardCronService.test.js","startTime":1752862078315,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["benchmarkController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["benchmarkController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["benchmarkController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["benchmarkController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["benchmarkController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["benchmarkController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["benchmarkController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["benchmarkController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["benchmarkController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["benchmarkController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["benchmarkController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["benchmarkController","Extended functionality"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"benchmarkController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862079876,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\benchmarkController.test.js","startTime":1752862079115,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["realNiftyDataService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["realNiftyDataService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["realNiftyDataService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["realNiftyDataService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["realNiftyDataService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["realNiftyDataService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["realNiftyDataService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["realNiftyDataService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["realNiftyDataService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["realNiftyDataService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["realNiftyDataService","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["realNiftyDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realNiftyDataService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862080758,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\realNiftyDataService.test.js","startTime":1752862079896,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["microservicesArchitectureService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["microservicesArchitectureService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["microservicesArchitectureService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["microservicesArchitectureService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["microservicesArchitectureService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["microservicesArchitectureService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["microservicesArchitectureService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["microservicesArchitectureService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["microservicesArchitectureService","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["microservicesArchitectureService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["microservicesArchitectureService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["microservicesArchitectureService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"microservicesArchitectureService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862081501,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\microservicesArchitectureService.test.js","startTime":1752862080778,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["rewardsController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["rewardsController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["rewardsController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["rewardsController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["rewardsController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["rewardsController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["rewardsController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["rewardsController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["rewardsController","Integration"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["rewardsController","Performance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["rewardsController","Performance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["rewardsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"rewardsController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862082284,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\rewardsController.test.js","startTime":1752862081527,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SmartSip","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["SmartSip","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["SmartSip","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["SmartSip","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["SmartSip","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["SmartSip","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["SmartSip","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["SmartSip","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["SmartSip","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["SmartSip","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["SmartSip","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["SmartSip","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SmartSip Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862082960,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\SmartSip.test.js","startTime":1752862082304,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["digioController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["digioController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["digioController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["digioController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["digioController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["digioController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["digioController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["digioController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["digioController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["digioController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["digioController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["digioController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["digioController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862083736,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\digioController.test.js","startTime":1752862082980,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["cronService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["cronService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["cronService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["cronService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["cronService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["cronService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["cronService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["cronService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["cronService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["cronService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"cronService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["cronService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["cronService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["cronService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["cronService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"cronService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862084440,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\cronService.test.js","startTime":1752862083756,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["socialInvestingService","Basic functionality"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["socialInvestingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["socialInvestingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["socialInvestingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["socialInvestingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["socialInvestingService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["socialInvestingService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["socialInvestingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["socialInvestingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["socialInvestingService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["socialInvestingService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["socialInvestingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"socialInvestingService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862085224,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\socialInvestingService.test.js","startTime":1752862084460,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["realTimeDataService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["realTimeDataService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["realTimeDataService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["realTimeDataService","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["realTimeDataService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["realTimeDataService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["realTimeDataService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["realTimeDataService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["realTimeDataService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["realTimeDataService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["realTimeDataService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["realTimeDataService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"realTimeDataService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862085943,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\realTimeDataService.test.js","startTime":1752862085245,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["leaderboardController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["leaderboardController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["leaderboardController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["leaderboardController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["leaderboardController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["leaderboardController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["leaderboardController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["leaderboardController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["leaderboardController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["leaderboardController","Performance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["leaderboardController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["leaderboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"leaderboardController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862086741,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\leaderboardController.test.js","startTime":1752862085966,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862087342,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioTaxManager.test.js","startTime":1752862086764,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["adminController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["adminController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["adminController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["adminController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["adminController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["adminController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["adminController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["adminController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["adminController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["adminController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["adminController","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["adminController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["adminController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["adminController","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["adminController","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["adminController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"adminController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862088172,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\adminController.test.js","startTime":1752862087348,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Agent","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Agent","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Agent","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Agent","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Agent","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Agent","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Agent","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Agent","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Agent","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Agent","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Agent","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Agent","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Agent","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Agent Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862088914,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Agent.test.js","startTime":1752862088193,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Reward","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Reward","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Reward","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Reward","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Reward","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Reward","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Reward","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Reward","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Reward","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Reward","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Reward","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Reward","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Reward","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reward Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862089723,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Reward.test.js","startTime":1752862088937,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AuditLog","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["AuditLog","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["AuditLog","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["AuditLog","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["AuditLog","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["AuditLog","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["AuditLog","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["AuditLog","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["AuditLog","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["AuditLog","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["AuditLog","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["AuditLog","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862090490,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\AuditLog.test.js","startTime":1752862089744,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ollamaController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["ollamaController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["ollamaController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["ollamaController","Data validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["ollamaController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["ollamaController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["ollamaController","Business logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["ollamaController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["ollamaController","Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["ollamaController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["ollamaController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["ollamaController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ollamaController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862091324,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\ollamaController.test.js","startTime":1752862090510,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["complianceEngine","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["complianceEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["complianceEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["complianceEngine","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["complianceEngine","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["complianceEngine","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["complianceEngine","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["complianceEngine","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["complianceEngine","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["complianceEngine","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["complianceEngine","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["complianceEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceEngine Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862091909,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\complianceEngine.test.js","startTime":1752862091339,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Admin","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Admin Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Admin","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Admin","Basic functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Admin Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Admin","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Admin","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Admin","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Admin","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Admin","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Admin","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Admin","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Admin","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Admin","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Admin","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Admin Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862092493,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Admin.test.js","startTime":1752862091921,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["quantumComputingService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["quantumComputingService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["quantumComputingService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["quantumComputingService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["quantumComputingService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["quantumComputingService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["quantumComputingService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["quantumComputingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["quantumComputingService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["quantumComputingService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["quantumComputingService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["quantumComputingService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"quantumComputingService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862093013,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\quantumComputingService.test.js","startTime":1752862092513,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["aiService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"aiService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["aiService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"aiService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["aiService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["aiService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["aiService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["aiService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["aiService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["aiService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["aiService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["aiService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["aiService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["aiService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["aiService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"aiService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862093642,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\aiService.test.js","startTime":1752862093032,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Notification","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Notification","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Notification","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Notification","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Notification","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Notification","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Notification","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Notification","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Notification","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Notification","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Notification","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Notification","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Notification","Extended functionality"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Notification","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Notification","Extended functionality"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Notification","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Notification","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Notification","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Notification","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Notification","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Notification Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862094263,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Notification.test.js","startTime":1752862093661,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["digioService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["digioService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["digioService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["digioService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["digioService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["digioService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["digioService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["digioService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["digioService","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["digioService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["digioService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["digioService","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["digioService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["digioService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"digioService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862094859,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\digioService.test.js","startTime":1752862094280,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["tierOutreachController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["tierOutreachController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["tierOutreachController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["tierOutreachController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["tierOutreachController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["tierOutreachController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["tierOutreachController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["tierOutreachController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["tierOutreachController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["tierOutreachController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["tierOutreachController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["tierOutreachController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"tierOutreachController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862095363,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\tierOutreachController.test.js","startTime":1752862094871,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["complianceController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["complianceController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["complianceController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["complianceController","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["complianceController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["complianceController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["complianceController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["complianceController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["complianceController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["complianceController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["complianceController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["complianceController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"complianceController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862095974,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\complianceController.test.js","startTime":1752862095379,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["auditService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["auditService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["auditService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["auditService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["auditService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["auditService","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["auditService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["auditService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["auditService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["auditService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["auditService","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["auditService","Extended functionality"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["auditService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["auditService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"auditService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862096459,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\auditService.test.js","startTime":1752862095987,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Commission","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Commission","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Commission","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Commission","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Commission","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Commission","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Commission","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Commission","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Commission","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Commission","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Commission","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Commission","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Commission","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Commission","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Commission Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862097084,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Commission.test.js","startTime":1752862096470,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["marketAnalyticsEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["marketAnalyticsEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["marketAnalyticsEngine","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["marketAnalyticsEngine","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["marketAnalyticsEngine","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["marketAnalyticsEngine","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["marketAnalyticsEngine","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["marketAnalyticsEngine","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["marketAnalyticsEngine","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["marketAnalyticsEngine","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["marketAnalyticsEngine","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["marketAnalyticsEngine","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsEngine Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862097560,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\marketAnalyticsEngine.test.js","startTime":1752862097096,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["marketAnalyticsController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["marketAnalyticsController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["marketAnalyticsController","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["marketAnalyticsController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["marketAnalyticsController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["marketAnalyticsController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["marketAnalyticsController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["marketAnalyticsController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["marketAnalyticsController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["marketAnalyticsController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["marketAnalyticsController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["marketAnalyticsController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"marketAnalyticsController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862098169,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\marketAnalyticsController.test.js","startTime":1752862097576,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862098584,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioRebalancer.test.js","startTime":1752862098181,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["learningController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["learningController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["learningController","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["learningController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["learningController","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["learningController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["learningController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["learningController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["learningController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["learningController","Performance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"learningController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["learningController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["learningController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["learningController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"learningController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862099241,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\learningController.test.js","startTime":1752862098587,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["dashboardController","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["dashboardController","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["dashboardController","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["dashboardController","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["dashboardController","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["dashboardController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["dashboardController","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["dashboardController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["dashboardController","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["dashboardController","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["dashboardController","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["dashboardController","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"dashboardController Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862099751,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\controllers\\dashboardController.test.js","startTime":1752862099255,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AIInsight","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["AIInsight","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["AIInsight","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["AIInsight","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["AIInsight","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["AIInsight","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["AIInsight","Business logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["AIInsight","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["AIInsight","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["AIInsight","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["AIInsight","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["AIInsight","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AIInsight Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862100313,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\AIInsight.test.js","startTime":1752862099763,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862100729,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioComplianceManager.test.js","startTime":1752862100327,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862101237,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAlertManager.test.js","startTime":1752862100733,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Holding","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["Holding","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["Holding","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["Holding","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["Holding","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["Holding","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["Holding","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Holding","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["Holding","Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["Holding","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["Holding","Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["Holding","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["Holding","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Holding Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862101706,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\models\\Holding.test.js","startTime":1752862101242,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862102225,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioPerformanceManager.test.js","startTime":1752862101715,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862102633,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioSimulation.test.js","startTime":1752862102229,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862103194,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioNotificationManager.test.js","startTime":1752862102637,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["navHistoryService","Basic functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Basic functionality should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["navHistoryService","Basic functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Basic functionality should have required methods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have required methods"},{"ancestorTitles":["navHistoryService","Basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Basic functionality should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["navHistoryService","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Data validation should validate input data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input data"},{"ancestorTitles":["navHistoryService","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Data validation should reject invalid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject invalid data"},{"ancestorTitles":["navHistoryService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Business logic should perform calculations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should perform calculations correctly"},{"ancestorTitles":["navHistoryService","Business logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Business logic should handle edge cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle edge cases"},{"ancestorTitles":["navHistoryService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Integration should integrate with other services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with other services"},{"ancestorTitles":["navHistoryService","Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Integration should handle external API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle external API calls"},{"ancestorTitles":["navHistoryService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Performance should handle large datasets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["navHistoryService","Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Performance should respond within acceptable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 1"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 2"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 3"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 4","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 4"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 5","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 5"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 6"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 7"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 8","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 8"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 9","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 9"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 10"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 11","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 11"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 12","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 12"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 13","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 13"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 14","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 14"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 15","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 15"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 16","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 16"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 17","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 17"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 18","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 18"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 19","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 19"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 20","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 20"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 21","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 21"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 22","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 22"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 23","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 23"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 24"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 25","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 25"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 26","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 26"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 27","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 27"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 28","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 28"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 29","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 29"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 30","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 30"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 31","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 31"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 32","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 32"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 33","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 33"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 34","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 34"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 35","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 35"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 36","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 36"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 37","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 37"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 38","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 38"},{"ancestorTitles":["navHistoryService","Extended functionality"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"navHistoryService Extended functionality should handle scenario 39","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle scenario 39"}],"endTime":1752862103697,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\navHistoryService.test.js","startTime":1752862103197,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862104242,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAuditManager.test.js","startTime":1752862103712,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862104650,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioStressTester.test.js","startTime":1752862104246,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862105183,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioBacktester.test.js","startTime":1752862104655,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862105591,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioESGManager.test.js","startTime":1752862105188,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862106125,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioFeeManager.test.js","startTime":1752862105594,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862106536,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioDividendManager.test.js","startTime":1752862106129,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862107092,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioReporting.test.js","startTime":1752862106542,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862107533,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioTransactionManager.test.js","startTime":1752862107096,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862108159,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioGoalManager.test.js","startTime":1752862107539,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862108628,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioRiskManager.test.js","startTime":1752862108164,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862109185,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioDocumentManager.test.js","startTime":1752862108633,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862109623,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioAttribution.test.js","startTime":1752862109189,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"placeholder","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"placeholder"}],"endTime":1752862110237,"message":"","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\portfolioOrderManager.test.js","startTime":1752862109632,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1752862132009,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\n    \u001b[0m \u001b[90m 255 |\u001b[39m\n     \u001b[90m 256 |\u001b[39m describe(\u001b[32m'SIP Brewery Dynamic SIP Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 257 |\u001b[39m   \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'../../src/services/smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 258 |\u001b[39m   \u001b[36mconst\u001b[39m \u001b[33mSmartSip\u001b[39m \u001b[33m=\u001b[39m require(\u001b[32m'../../src/models/SmartSip'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 259 |\u001b[39m\n     \u001b[90m 260 |\u001b[39m   test(\u001b[32m'SIP-only fund: Only SIP orders placed, dynamic pause/resume works'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\n      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\n      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\n      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\n      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\n      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\n      \u001b[2mat parseClassMember (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\n      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n      \u001b[2mat require (\u001b[22m\u001b[0m\u001b[36m__tests__/services/smartSipService.test.js\u001b[39m\u001b[0m\u001b[2m:257:27)\u001b[22m\n      \u001b[2mat Object.describe (\u001b[22m\u001b[0m\u001b[36m__tests__/services/smartSipService.test.js\u001b[39m\u001b[0m\u001b[2m:256:1)\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\services\\smartSipService.test.js","startTime":1752862132009,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1752862132009,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\src\\services\\smartSipService.js: Missing semicolon. (377:7)\n\n    \u001b[0m \u001b[90m 375 |\u001b[39m \u001b[90m   * Get SIP analytics\u001b[39m\n     \u001b[90m 376 |\u001b[39m \u001b[90m   */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 377 |\u001b[39m   \u001b[36masync\u001b[39m getSIPAnalytics(userId) {\n     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 378 |\u001b[39m     \u001b[36mtry\u001b[39m {\n     \u001b[90m 379 |\u001b[39m       \u001b[36mconst\u001b[39m sip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSmartSip\u001b[39m\u001b[33m.\u001b[39mfindOne({ \n     \u001b[90m 380 |\u001b[39m         userId\u001b[33m,\u001b[39m \u001b[0m\n\n    \u001b[0m \u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m cron \u001b[33m=\u001b[39m require(\u001b[32m'node-cron'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m smartSipService \u001b[33m=\u001b[39m require(\u001b[32m'./smartSipService'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mconst\u001b[39m marketScoreService \u001b[33m=\u001b[39m require(\u001b[32m'./marketScoreService'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m require(\u001b[32m'../utils/logger'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 5 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\n      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseTryStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1200:23)\u001b[22m\n      \u001b[2mat Parser.parseTryStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:544:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseFunctionBodyAndFinish] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2585:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBodyAndFinish [as parseMethod] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2482:31)\u001b[22m\n      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\n      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2060:14)\u001b[22m\n      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\n      \u001b[2mat parseClassMember (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\n      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22msrc/services/cronService.js\u001b[2m:2:25)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22msrc/services/index.js\u001b[2m:5:21)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22msrc/app.js\u001b[2m:10:45)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36m__tests__/real-backend.test.js\u001b[39m\u001b[0m\u001b[2m:20:45)\u001b[22m\n","name":"C:\\Users\\MILINRAIJADA\\sip-brewery-backend\\__tests__\\real-backend.test.js","startTime":1752862132009,"status":"failed","summary":""}],"wasInterrupted":false}
